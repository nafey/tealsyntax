%YAML 1.2
---

file_extensions:
  - tl
scope: source.teal

variables:
  name: '\b[A-Za-z_][A-Za-z_0-9]*\b'

contexts:
  prototype:
    - include: comments

  main:
    - include: keywords
    - include: expression

  else-pop:
    - match: (?=\S)
      pop: 1

  variable:
    - match: '{{name}}'
      scope: variable.other.teal

  accessor:
    - match: '\.'
      scope: punctuation.accessor.teal
      push:
        - meta_scope: meta.property.teal
        - match: '{{name}}'
          scope: variable.other.teal
        - include: else-pop

  comments:
    - match: '--'
      scope: punctuation.definition.comment.teal
      push: comment-line

  comment-line:
    - meta_scope: comment.line.teal
    - match: .*
      pop: 1

  numeric:
    - match: \b\d+\.?\d*\b
      scope: constant.numeric.teal

  string:
    - include: double-string
    - include: single-string

  double-string:
    - match: \"
      scope: punctuation.definition.string.begin.teal
      push: double-string-body

  double-string-body:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.teal meta.string.teal
    - match: \"
      scope: punctuation.defintion.string.end.teal
      pop: 1

  single-string:
    - match: \'
      scope: punctuation.definition.string.begin.teal
      push: single-string-body

  single-string-body:
    - meta_include_prototype: false
    - meta_scope: string.quoted.single.teal meta.string.teal
    - match: \'
      scope: punctuation.defintion.string.end.teal
      pop: 1

  function-call:
    - match: '{{name}}(?=\s*\(\s*)'
      scope: meta.function-call.teal variable.function.teal
      push: function-arguments

  function-arguments:
    - match: \(
      scope: punctuation.section.group.begin.teal
      push:
        - meta_scope: meta.function-call.arguments.teal meta.group.teal
        - include: arglist
        - match: \)(?=\()
          scope: punctuation.section.group.end.teal
          set: function-arguments
        - match: '\)(?=\[)'
          scope: punctuation.section.group.end.teal
          set: array-index
        - match: \)
          scope: punctuation.section.group.end.teal
          pop: 1
    - match: (?=\S)
      pop: 1

  arglist:
    - include: expression
    - match: ','
      scope: punctuation.separator.comma.teal

  array:
    - match: '{{name}}(?=\s*\[\s*)'
      scope: variable.other.teal
      push: array-index

  array-index:
    - match: '\['
      scope: punctuation.section.brackets.begin.teal
      push:
        - meta_scope: meta.brackets.teal
        - include: expression
        - match: \](?=\()
          scope: punctuation.section.brackets.end.teal
          set: function-arguments
        - match: '\](?=\[)'
          scope: punctuation.section.brackets.end.teal
          set: array-index
        - match: '\]'
          scope: punctuation.section.brackets.end.teal
          pop: 1
    - match: '(?=\S)'
      pop: 1




          # pop: 100
    # - match: '(?=\S)'
    #   pop: 1

  keywords:
    - match: for
      scope: keyword.control.loop.teal
    - match: if
      scope: keyword.control.conditional.teal

  literals:
    - include: string
    - include: numeric

  atoms:
    - include: literals
    - include: function-call
    - include: array
    - include: variable
    - include: accessor

  expression:
    - include: atoms
    - match: =
      scope: keyword.operator.assignment.teal
    - match: '[+\-*/]'
      scope: keyword.operator.arithmetic.teal
    - include: numeric
    - match: \(
      scope: punctuation.section.group.begin.teal
      push: paren-expression


  paren-expression:
    - meta_include_prototype: false
    - meta_scope: meta.group.teal
    - include: expression
    - match: \)(?=\()
      scope: punctuation.section.group.end.teal
      set: function-arguments
    - match: '\)(?=\[)'
      scope: punctuation.section.group.end.teal
      set: array-index
    - match: \)
      scope: punctuation.section.group.end.teal
      pop: 1
